class Solution {
    char[] word;
    boolean[][] vistied;
    char[][] board;
    public boolean exist(char[][] board,String word) {
        this.board = board;
        this.word = word.toCharArray();
        this.vistied = new boolean[board.length][board[0].length];
        int k = 0;
        for(int i = 0;i<board.length;i++) {
            for(int j = 0;j<board[0].length;j++) {
                if(dfs(i,j,k)) {
                    return true;
                }
            }
        }
        return false;
    }

    public boolean dfs(int i,int j,int k) { 
        if(k == word.length) {
            return true;
        }
        if(i<0 || i>=board.length || j<0 || j>=board[0].length || vistied[i][j] || board[i][j] != word[k]) {
            return false;
        }
        vistied[i][j] = true;
        boolean res = dfs(i-1,j,k+1) || dfs(i+1,j,k+1) || dfs(i,j+1,k+1) || dfs(i,j-1,k+1);
        vistied[i][j] = false;
        return res;

    }
}
